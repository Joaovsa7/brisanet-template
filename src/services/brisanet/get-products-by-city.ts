export const getProductsByCity = async (cityId = '74') => {
  console.log({ cityId })
  try {
    const response = await fetch("https://produtos.brisanet.net.br/api/cmsbrisasite/p1//graphql", {
      "headers": {
        "accept": "*/*",
        "accept-language": "en-US,en;q=0.9",
        "authorization": "Bearer a5bf808c4a22c3b54aef5b5a3f4d1580993d152b90aabe77c2241613e30f459dcff372d7e51aafb04e274d3a66fd67107d40cd6064ccca680e08e80f8557a5a7a7f00c626b7f6744dd284323db9e54af8a476749b41413af78b8e5ea656d980198c74df5e37a51ca7ae15b8b1a0bc5e78ecee9cb3bf0069758c1504cbfb46667",
        "content-type": "application/json",
        "sec-ch-ua": "\"Chromium\";v=\"128\", \"Not;A=Brand\";v=\"24\", \"Google Chrome\";v=\"128\"",
        "sec-ch-ua-mobile": "?0",
        "sec-ch-ua-platform": "\"Windows\"",
        "sec-fetch-dest": "empty",
        "sec-fetch-mode": "cors",
        "sec-fetch-site": "cross-site"
      },
      "referrerPolicy": "same-origin",
      "body": `{\"query\":\"query fetchInternetPage($cityId: ID) {\\n  internetPage {\\n    data {\\n      attributes {\\n        offers {\\n          combos {\\n            id\\n            tab_name\\n            combos(filters: {cities: {id: {eq: $cityId}}, active: {eq: true}}) {\\n              data {\\n                id\\n                attributes {\\n                  ...comboItem\\n                }\\n              }\\n            }\\n          }\\n          services {\\n            id\\n            tab_name\\n            services(filters: {cities: {id: {eq: $cityId}}, active: {eq: true}}) {\\n              data {\\n                id\\n                attributes {\\n                  ...serviceItem\\n                }\\n              }\\n            }\\n          }\\n        }\\n        conecta {\\n          service {\\n            data {\\n              id\\n              attributes {\\n                ...serviceItem\\n              }\\n            }\\n          }\\n        }\\n        advantage {\\n          svas {\\n            data {\\n              id\\n              attributes {\\n                ...svaItem\\n              }\\n            }\\n          }\\n        }\\n        questions {\\n          faq {\\n            data {\\n              id\\n              attributes {\\n                faqTopics(filters: {showOnServicePage: {eq: true}, active: {eq: true}}) {\\n                  question\\n                  response\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\\nfragment regulationItem on RegulationRelationResponseCollection {\\n  data {\\n    id\\n    attributes {\\n      active\\n      pdf {\\n        data {\\n          attributes {\\n            url\\n            name\\n          }\\n        }\\n      }\\n      html {\\n        data {\\n          attributes {\\n            url\\n          }\\n        }\\n      }\\n      description\\n    }\\n  }\\n}\\n\\nfragment informationItem on ComponentListInformation {\\n  id\\n  name\\n  category\\n  icon {\\n    data {\\n      attributes {\\n        url\\n      }\\n    }\\n  }\\n  iconThemeDark {\\n    data {\\n      attributes {\\n        url\\n      }\\n    }\\n  }\\n  iconSecondary {\\n    data {\\n      attributes {\\n        url\\n      }\\n    }\\n  }\\n  iconSecondaryThemeDark {\\n    data {\\n      attributes {\\n        url\\n      }\\n    }\\n  }\\n}\\n\\nfragment appsItem on App {\\n  icon {\\n    data {\\n      attributes {\\n        url\\n      }\\n    }\\n  }\\n  name\\n}\\n\\nfragment svaItem on Sva {\\n  name\\n  description\\n  pageUrl\\n  playStore\\n  appStore\\n  shortText\\n  identifier\\n  informations {\\n    ...informationItem\\n  }\\n  icon {\\n    data {\\n      id\\n      attributes {\\n        url\\n        width\\n        height\\n      }\\n    }\\n  }\\n  logo {\\n    data {\\n      id\\n      attributes {\\n        url\\n      }\\n    }\\n  }\\n}\\n\\nfragment serviceItem on Service {\\n  __typename\\n  price\\n  description\\n  typePlan\\n  label {\\n    active\\n    displayOffer\\n  }\\n  speed {\\n    data {\\n      attributes {\\n        value\\n        informations {\\n          ...informationItem\\n        }\\n      }\\n    }\\n  }\\n  informations {\\n    ...informationItem\\n  }\\n  regulations(filters: {active: {eq: true}}) {\\n    ...regulationItem\\n  }\\n  identifier_service {\\n    data {\\n      id\\n      attributes {\\n        name\\n      }\\n    }\\n  }\\n  internet_franchise {\\n    data {\\n      attributes {\\n        name\\n        value\\n      }\\n    }\\n  }\\n  channel_bundle {\\n    data {\\n      id\\n      attributes {\\n        identifier\\n        information {\\n          name\\n          id\\n          category\\n          icon {\\n            data {\\n              attributes {\\n                url\\n              }\\n              id\\n            }\\n          }\\n          iconThemeDark {\\n            data {\\n              id\\n              attributes {\\n                url\\n                name\\n              }\\n            }\\n          }\\n        }\\n        channels(filters: {active: {eq: true}}, pagination: {limit: 100}) {\\n          data {\\n            id\\n            attributes {\\n              name\\n              active\\n              logoModal {\\n                data {\\n                  id\\n                  attributes {\\n                    url\\n                  }\\n                }\\n              }\\n              logoAccessibility {\\n                white {\\n                  data {\\n                    id\\n                    attributes {\\n                      url\\n                    }\\n                  }\\n                }\\n                black {\\n                  data {\\n                    id\\n                    attributes {\\n                      url\\n                    }\\n                  }\\n                }\\n              }\\n              states {\\n                data {\\n                  id\\n                  attributes {\\n                    UF\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n  apps(filters: {active: {eq: true}}) {\\n    data {\\n      id\\n      attributes {\\n        ...appsItem\\n      }\\n    }\\n  }\\n  svas(filters: {active: {eq: true}}) {\\n    data {\\n      id\\n      attributes {\\n        ...svaItem\\n      }\\n    }\\n  }\\n}\\n\\nfragment comboItem on Combo {\\n  __typename\\n  identifier\\n  discount\\n  label {\\n    active\\n    displayOffer\\n    icon {\\n      data {\\n        attributes {\\n          url\\n        }\\n      }\\n    }\\n  }\\n  regulations(filters: {active: {eq: true}}) {\\n    ...regulationItem\\n  }\\n  services(filters: {active: {eq: true}}) {\\n    data {\\n      id\\n      attributes {\\n        ...serviceItem\\n      }\\n    }\\n  }\\n  dobleSpeed {\\n    speed {\\n      data {\\n        attributes {\\n          value\\n          informations {\\n            ...informationItem\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\",\"variables\":{\"cityId\":\"${cityId}\"},\"operationName\":\"fetchInternetPage\"}`,
      "method": "POST"
    });

    const { data: { internetPage: { data: { attributes}}}} = await response.json();

    return attributes.offers;
  } catch (error) {
    console.error('Error fetching data:', error);
    return []
  }
}